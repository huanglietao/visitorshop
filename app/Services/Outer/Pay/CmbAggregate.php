<?php
namespace App\Services\Outer\Pay;

use App\Services\Outer\AbstractApi;
use function GuzzleHttp\Psr7\parse_query;

/**
 *  招行聚合支付接口请求
 *
 * 对招行聚合支付各接口参数、签名、发送头处理
 * @author: yanxs <541139655@qq.com>
 * @version: 1.0
 * @date: 2019/12/25
 */
class CmbAggregate extends AbstractApi
{
    protected $isSign = true;
    protected $secretKey = ""; //生成签名的key
    protected $contentType = "application/json";

    public function __construct()
    {
        $this->secretKey = config('common.cmb.mch_pri_key');
    }

    /**
     * @param \App\Services\Outer\请求地址 $url
     * @param \App\Services\Outer\请求参数 $params
     * @param string $method
     * @return mixed
     * @throws \App\Exceptions\CommonException
     * @throws \GuzzleHttp\Exception\GuzzleException
     */
    public function request($url, $params, $method = 'POST')
    {
        return parent::request($url, $params, $method); // TODO: Change the autogenerated stub
    }

    /**
     * 获取发送报文头额外的信息
     * @param array $params
     * @return array
     */
    protected function getOtherHeaderParams($params)
    {
        //这里后面需要根据配置重新实现
        $appid = config('common.cmb.app_id');
        $secret = config('common.cmb.app_secret');
        $sign = $this->getSign($params);
        $timestamp = time();

        $apisign = md5('appid='.$appid.'&secret='.$secret.'&sign='.$sign.'&timestamp='.$timestamp);
        $this->headerOther =  [
            'appid'       => $appid,
            'timestamp'   => $timestamp,
            'apisign'     => $apisign
        ];
        return  $this->headerOther;
    }

    /**
     * 签名算法
     * @param $params
     * @param string $privateKey
     * @return string
     */
    public function getSign($params, $privateKey = '')
    {
        //$privateKey = 'MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCc540quYC9xzCMZeFOe8UmE3W5LWrqFd/2DDSHQASxq8vmOiwFRSG2hsVXtjfmNLQNhtpTR0SGDUjkCsx+SJH0JDnOfQ2xXHasO65Rnv2wrHs64P6U0aUrMWjgapjkmLwzRV12AKNAX77MGIocpcB0KZhk+0AVc6oQCBybV65JTGu+pAyFLMJRtIP5kH3VMuXmig6VeiZAsjEewD/emxgK3cXejMQvqlNYFnCLsZ7ovAhr+bhz6SHkOws3p80O6zfQbKfLzdSVaZK8FnwNPznUxAK77bRZN0zF3V9mL9+zrarvFPD5VkcVHNLj0DRzLmr2c5TbiCigs4+I+NMfhpoLAgMBAAECggEAbM8GzoImDXV87WAZhtu+NFF6ahhc9EiHL5H3O3PhzXRdyiK9NEpkvrdnUxRCX5pc4qSJ8waRNoUv7zSt60VYMf6NN+zw+fYtNfONR30CYOq76nDtGzbnW7TADiDeNmjU2plX3uVCUPoUzmSWIpevht7xl9XE8xtq7AM0E2YSrzEADcxtqQslM0uVOf+ki1eu0/OwCz13FzPlPtnDwt2Lw9xxCxWqTgpN4oD5m6EWTqbognUIJ0EFD0dHXjrYnHXc+/Za5e+CDXYApHuhR9bifa1e4HMN084oLY+rkSXUV3+Te0APPCfbeEeqvubziDmKxxKaWUq1wPbYi4c06ZQdgQKBgQDhF7zDWgiJFTgrLGmExJRKiR/3QZN4sugYE1itdRDJmiPV4xhWPXSsND3WtqR5+0otb/hbzRa3cyl/RXV/1ZmBbE46fX2DKnmLQ1gP74iOuqWpfxjh/qpk+3kEY9aP57le/O0QEEPsJmqCsGM7XnzfNsxGAFYaDHooRbcGtv++AwKBgQCycuvRUQjV4dxTuRJuwFbmdq4odSBMu7yCS4i5I9I73d3TGZBWfiXQWFmuiPh+pf3HdvMbgyA243Uv/NGapSmNvARXm0/eEyfTxV7+GVdwLf3sSe8DQMCR1eJA9VzuS+jhCrHkFgyW3V/3ki66W8YITENlgC+VebOatfFE8i/ZWQKBgQCZ2VmhxFX1LFW53J86qgoZb+QzYdTkOJQ+cGq6FDunL/2yYYfu2g527TYfHbMJ1OH8cH22cVVHiiUg4l7PQzWqqlZF0CQLlOqCb0MvkS8rLxOv6DkfrqrUXrV2dK7gqSegbwuxYQyryg4eyWTp3UlIX/H7Hpu7LjAIeq4Anu/p9QKBgFMtpiYHM6segGi2F5VwKhF6uGs7TTb3O0MwmiZSQCiPnlpLzC/E1TNsO0FTryC5lrVnCKKGWHm9RF595eXDnr7mKM/9IRlOrH3VvhWLEmrDxVxiifpmMFzJ6ZCFzi91SrO7HHhIns2jmpv3k7hiFsi/Y5roSUXPWJyAull82jjhAoGAaKujjF4HL91UXZFetkkKiBIpIrH5+XbiX9z7H9/Tv8NSy/zTvXp3hFl3dr9gO722i/96dTq4th23Gqtih4cA9x8Wd7RChR9yAK/ffSj1lW6RhBWj1j2JCPFCm1TJD5iO3bIeuHm2sAuafKKoWT/VCUkKRwt9Wwh9yF20vMQ3kFw=';

        if(empty($privateKey)) {
            $privateKey = $this->secretKey;
        }

        $privateKey = "-----BEGIN RSA PRIVATE KEY-----\n" .
            wordwrap($privateKey, 64, "\n", true) .
            "\n-----END RSA PRIVATE KEY-----";

        $key =openssl_get_privatekey($privateKey);

        $content = $this->getSortStr($params);
        openssl_sign($content, $signature, $privateKey, "SHA256");
        openssl_free_key($key);
        $sign = base64_encode($signature);
        //var_dump($sign);exit;
        return $sign;
    }

    /**
     * 验签算法
     * @param  array $arrData 传入的参数,带sign参数
     * @param string $publicKey  公钥
     * @param string $sign 待验证签名
     * @return int 0|1 0验签失败 1验签成功
     */
    public function verify($arrData, $publicKey,  $sign='')
    {

        /*$str = 'biz_content=%7B%22merId%22%3A%22308999150570002%22%2C%22openId%22%3A%22o0xFV4wXFttZiHplNCvq9GGm8lrM%22%2C%22orderId%22%3A%2214233022%22%2C%22cmbOrderId%22%3A%22003219052720175970907079%22%2C%22userId%22%3A%22N002864744%22%2C%22txnAmt%22%3A%221%22%2C%22currencyCode%22%3A%22156%22%2C%22payType%22%3A%22WX%22%2C%22txnTime%22%3A%2220190527201844%22%2C%22endDate%22%3A%2220190527%22%2C%22endTime%22%3A%22201843%22%2C%22dscAmt%22%3A%220%22%7D&sign=MCMCKUgAv%2FIUIL3ceQ3gaFhUHPN4LMb8xBG2zOUaurdpciSFmCnJAD3SpnEaCIGTl3XhKsXaK%2FqWVxaZk5x%2BPt5%2F5BKypqLrmyOiqsq45H8%2FSyOYLE9VKPWL02YztJcFVNNNrOmeLOzcWbxqt7RPhgSanyZ9pXxXIBvqA9Uk91G2NN6TxP5gxcaTKMWAidLxhyYLiEO0XDRZZCDTg%2BkW1WNH2imjpGSlfR%2BhwI0lcMzdH7QRDDyB1jEKrNr%2Fcuy12mC2MMX61pFGzh5GSoO2s%2FS1eoPf9vSdPzrrBqqshDss3yBRWlPLa6GnTw9oxJ%2F7uQVizaur960rW7UOcsOzYg%3D%3D&encoding=UTF-8&version=0.0.1&signMethod=01';
        $strDecode = urldecode($str);
        $arrData = parse_query($strDecode);

        $json = '{"encoding":"UTF-8","biz_content":"{\"termId\":\"term0525\",\"orderId\":\"2018060616435200002\",\"notifyUrl\":\"http://wlhost1.paas.cmbchina.cn/mch_notify/api/notify\",\"merId\":\"20180524200752LWW\",\"payValidTime\":\"100000\",\"currencyCode\":\"156\",\"userId\":\"N111555974\",\"txnAmt\":\"134\",\"body\":\"收款测试0606\"}","signMethod":"01","version":"0.0.1","sign":"knBIYcoMOBnrkXqRsCK+545Hl6xmrPNYs21l8bMbqkrQ4/3doFVFBkmjytZJnKH2KR4jaLdw9uaNn4b9UUXoLjWYKlCFvaTlUGsXPL/gMJJ3WAIA6w969YtUb06pLOEAtaS3HRkY8p0jBwgujRXnhXdgSWqn3KxefHt9qAKUdUZySQ9UkQzGJBDbHg1eT++zVN+darm4WzyB1SfZl+foy4ynDuV2xx2rJ++BipxlL1dd1bozzji7nvcmEmv8Cnahm7aV0/0ATDgYL5ZEcGp8eaj4nJeHttwH5dfju8+1hR+dfNY/bnZxmHIrmbx6VHWPnwgX/fB81J1tLmz98G5uaA=="}';
        $arrData = json_decode($json, true);
        */
        if (empty ($sign)) {
            $sign = $arrData['sign'];
        }
        unset($arrData['sign']);

        $content = $this->getSortStr($arrData);

        //$publicKey = 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnOeNKrmAvccwjGXhTnvFJhN1uS1q6hXf9gw0h0AEsavL5josBUUhtobFV7Y35jS0DYbaU0dEhg1I5ArMfkiR9CQ5zn0NsVx2rDuuUZ79sKx7OuD+lNGlKzFo4GqY5Ji8M0VddgCjQF++zBiKHKXAdCmYZPtAFXOqEAgcm1euSUxrvqQMhSzCUbSD+ZB91TLl5ooOlXomQLIxHsA/3psYCt3F3ozEL6pTWBZwi7Ge6LwIa/m4c+kh5DsLN6fNDus30Gyny83UlWmSvBZ8DT851MQCu+20WTdMxd1fZi/fs62q7xTw+VZHFRzS49A0cy5q9nOU24gooLOPiPjTH4aaCwIDAQAB';
        $publicKey = "-----BEGIN PUBLIC KEY-----\n" .
            wordwrap($publicKey, 64, "\n", true) .
            "\n-----END PUBLIC KEY-----";

        $key =openssl_get_publickey($publicKey);
       //var_dump($content);exit;
        $ret = openssl_verify($content, base64_decode($sign), $publicKey, "SHA256");
        openssl_free_key($key);

        //var_dump($ret);exit;
        return $ret;
    }

    /**
     * 数组参数转化为按字典排序的字符串
     * @param $data
     * @return string
     */
    private function getSortStr($data)
    {
        ksort($data);

        $ret_str = '';
        foreach ($data as $k=>$v) {
            $ret_str .= $k.'='.$v."&";
        }
        $content = trim($ret_str, '&');

        return $content;
    }

}
