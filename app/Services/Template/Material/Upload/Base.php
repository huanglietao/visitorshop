<?php
namespace App\Services\Template\Material\Upload;

use Intervention\Image\ImageManager;

/**
 * 基础上传类
 *
 * 基础上传类拥有完整的上传功能，如有特殊需求
 * 可在此类基础上进行扩展
 * @author: yanxs <541139655@qq.com>
 * @version: 1.0
 * @date: 2018/7/23
 */
ini_set("memory_limit", "512M");
class Base implements UploadInterface
{
    public $big = 'big'; //大图目录名称
    public $mid = 'mid'; //中图目录名称
    public $m_mid = 'mmid'; //移动端中图
    public $sml = 'sml'; //小图目录名称
    public $id;

    public $sysConfig; //系统配置信息

    public $paths;     //图片地址数组

    public $main;  //主目录
    public $config;
    public $fileField = 'file';  //上传域标识
    public $file;       //文件上传对像
    public $oriName;    //原始文件名
    public $fileName;   //文件名
    public $fullName;  //相对路径
    public $filePath; //完整文件路径
    public $fileSize; //文件大小
    public $fileType; //文件类型
    public $stateInfo; //上传状态信息,
    public $errorMap = [  //错误信息
        0 => 'SUCCESS',
        "ERROR_TMP_FILE" => "临时文件错误",
        "ERROR_TMP_FILE_NOT_FOUND" => "找不到临时文件",
        "ERROR_SIZE_EXCEED" => "文件大小超出网站限制",
        "ERROR_TYPE_NOT_ALLOWED" => "文件类型不允许",
        "ERROR_CREATE_DIR" => "目录创建失败",
        "ERROR_DIR_NOT_WRITEABLE" => "目录没有写权限",
        "ERROR_FILE_MOVE" => "文件保存时出错",
        "ERROR_FILE_NOT_FOUND" => "找不到上传文件",
        "ERROR_WRITE_CONTENT" => "写入文件内容错误",
        "ERROR_UNKNOWN" => "未知错误"
    ];
    public function __construct($config)
    {
        $this->config = $config;
        if(!isset($_FILES[$this->fileField]))
        {
            return true;
        }
        $this->file = $_FILES[$this->fileField];
        $this->main = isset($config['type'])?$config['type']:'';
        $this->id = isset($config['id'])?$config['id']:0;
        $this->sysConfig = isset($config['material_type'][$this->main])?$config['material_type'][$this->main]:[];
    }

    public function run()
    {
        $ret = $this->beforeRun();  //一般性上传处理
        if(!$ret){
            return ['success'=>false,'data'=>$this->stateInfo];
        }

        $sys_config = $this->sysConfig;

        $params = [];
        //需要切的参数
        if(isset($sys_config['crop']['mid']))
            $params[$this->mid] = $sys_config['crop']['mid'];
        if(isset($sys_config['crop']['mmid']))
                $params[$this->m_mid] = $sys_config['crop']['mmid'];
        if(isset($sys_config['crop']['sml']))
            $params[$this->sml] = $sys_config['crop']['sml'];

        if(!empty($params))
            $this->createCrop($params);

        //返回数据
        $info = $this->getFileInfo();

        if($this->stateInfo != 'SUCCESS'){
            return ['success'=>false,'data'=>$this->stateInfo];
        }else{
            return ['success'=>true,'data'=>$info];
        }
    }

    /**
     * 获取文件信息
     */
    public function getFileInfo(){
        $info = [
            'oriName' =>$this->file['name'],
            'size' =>$this->file['size'],
            'ext' => $this->getFileExt(),
            'full_name' => $this->fullName,
            'file_name' => $this->fileName,

        ];

        return $info;
    }


    protected function getStateInfo($errCode){
        return !$this->errorMap[$errCode] ? $this->errorMap["ERROR_UNKNOWN"] : $this->errorMap[$errCode];
    }

    /**
     * 获取文件扩展名
     * @return string
     */
    protected function getFileExt(){
        return strtolower(strrchr($this->file['name'], '.'));
    }

    /**
     * 重新命名文件
     */
    protected function getFullName(){
        $fisrt_dir = date('Ymd');
        $rand = rand(1,10);
        $second_dir = substr ( md5 ( time().uniqid() ), $rand, 2 );

        return $fisrt_dir.'/'.$second_dir.'/'.$this->getFileName();
    }

    protected function getFilePath($ext = ''){
        //parent::getFilePath(); // TODO: Change the autogenerated stub
        $this->fullName = $full_name = str_replace('.',$ext.'.',$this->getFullName());
        return [
            'big' => $this->getDir().'/'.$this->main.'/'.$this->big.'/'.$full_name,
            'mid' => $this->getDir().'/'.$this->main.'/'.$this->mid.'/'.$full_name,
            'mmid' => $this->getDir().'/'.$this->main.'/'.$this->m_mid.'/'.$full_name,
            'sml' => $this->getDir().'/'.$this->main.'/'.$this->sml.'/'.$full_name
        ];
    }

    protected function getDir(){
        if(isset($this->config['dir'])){
            return $this->config['dir'];
        }else{
            return  $_SERVER['DOCUMENT_ROOT'];
        }
    }

    protected function getFileName(){
        $this->fileName = uniqid().mt_rand(1000,9999).$this->getFileExt();
        return $this->fileName;
    }

    /**
     * 上传前处理
     */
    protected function beforeRun($ext =''){
        $file = $this->file;
        $paths = $this->paths = $this->getFilePath($ext);

        $arr_dir = [];
        foreach($paths as $k=>$path){
            $dirname = $arr_dir[$k] = dirname($path);

            //创建目录失败
            if (!file_exists($dirname)) {
                if(!mkdir($dirname, 0777, true)){
                    $this->stateInfo = $this->getStateInfo("ERROR_CREATE_DIR");
                    return false;
                }

            } else if (!is_writeable($dirname)) {
                $this->stateInfo = $this->getStateInfo("ERROR_DIR_NOT_WRITEABLE");
                return false;
            }

        }

        //移动文件
        if (!(move_uploaded_file($file["tmp_name"], $paths['big']) && file_exists($arr_dir['big']))) { //移动失败
            $this->stateInfo = $this->getStateInfo("ERROR_FILE_MOVE");
            return false;
        } else { //移动成功
            $this->stateInfo = $this->errorMap[0];
        }
        return true;
    }

    protected function beforeRunStream($ext= '') {
        $this->file = [];
    }

    /**
     * 裁剪不同尺寸的图片
     * @param $params
     */
    protected function createCrop($params){
        $paths = $this->paths;
        //创造小图
        $manager = new ImageManager(array('driver' => 'gd'));

        foreach($params as $k=>$v){
            $img = $manager->make($paths[$this->big]);
            $info = getimagesize($paths[$this->big]);

            if($info[0] <$v ){
                $v = $info[0];
            }
            $img->resize($v,null,function ($constraint) {
                $constraint->aspectRatio();
            });
            $img->save($paths[$k]);
        }

    }

}