<?php
namespace App\Repositories;

use App\Models\ErpPrintsDeliverOrder;
use App\Services\Outer\Erp\Api;


/**
 * 贸易订单信息仓库
 *
 * @author:cjx
 * @version: 1.0
 * @date:2020/03/10
 */
class ErpPrintsDeliverOrderRepository extends BaseRepository
{

    protected $apiErrRepos;

    public function __construct(ErpPrintsDeliverOrder $model, SassApiErrLogRepository $apiErrLogRepository)
    {
        $this->model =$model;
        $this->apiErrRepos = $apiErrLogRepository;
    }

    /**
     * 记录存入数据表
     * @param $data 接口返回的数据
     * @return array $result
     */
    public function saveInfo($data)
    {
        foreach ($data as $v){
            $is_exist = $this->model->where('trade_order_name',$v['trade_order_name'])->get();
            if(count($is_exist) == 0){
                $this->model->create($v);
            }else{
                $this->model->where("id",$is_exist[0]['id'])->update($v);
            }
        }
    }

    /**
     * 通过发货接口进行发货操作
     * @param $deliveryData 发货数据
     * @return boolean
     */
    public function deliveryByApi($postData)
    {
        //todo 请求api进行发货操作
        $api = new Api();

        $url = config('erp.interface_url').config('erp.write_order_no_pick');
        $resultApi  = $api->request($url,$postData);

        if($resultApi['code'] == 1) {  //成功
            return true;
        } else {
            $data = [
                'url' => $url,
                'params' => json_encode($postData),
                'err_msg' => $resultApi['message'],
                'created_at' => time()
            ];
            $this->apiErrRepos->insert($data);
            return false;
        }
    }

    public function orderItemInfo($order_no)
    {
        $result = $this->model->where('trade_order_name',$order_no)->first();
        return $result;
    }

    public function getById($id)
    {
        return parent::getById($id); // TODO: Change the autogenerated stub
    }
}
