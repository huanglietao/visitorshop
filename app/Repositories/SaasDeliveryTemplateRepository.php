<?php
namespace App\Repositories;

use App\Models\SaasDeliveryTemplate;
use App\Services\Helper;
use Illuminate\Support\Facades\DB;
/**
 * 仓库模板
 * 仓库模板
 * @author: liujh <vali12138@163.com>
 * @version: 1.0
 * @date:  2020/03/20
 */
class SaasDeliveryTemplateRepository extends BaseRepository
{

    public function __construct(SaasDeliveryTemplate $model)
    {
        $this->model =$model;
    }

    /**
     * @param null $where
     * @param null $order
     * @return mixed
     */
    public function getTableList($where=null, $order=null)
    {
        $limit = isset($where['limit']) ? $where['limit']:config('common.page_limit');  //这个10取配置里的
        $where = $this->parseWhere($where);

        //order 必须以 'id desc'这种方式传入.
        $orderBy = [];
        if (!empty ($order)) {
            $arrOrder = explode(' ', $order);
            if(count($arrOrder) == 2) {
                $orderBy = $arrOrder;
            }
        }
        $query = $this->model;

        //查询时间
        if(isset($where['created_at'])){
            $created_at = $where['created_at'];
            $time_list = Helper::getTimeRangedata($created_at);
            $query = $query->whereBetween("created_at",[$time_list['start'],$time_list['end']]);
            unset($where['created_at']);
        }

        if(!empty ($where)) {
            $query =  $query->where($where);
        }

        if(!empty($order)) {
            $query =  $query->orderBy($orderBy[0],$orderBy[1]);
        }

        $list = $query->paginate($limit);
        return $list;
    }


    /**
     * 新增/修改
     * @param $data
     * @return boolean
     */
    public function save($data)
    {
        if(empty($data['del_temp_id'])) {
            unset($data['del_temp_id']);
            $data['created_at'] = time();
            $ret = $this->model->create($data);
        } else {
            $priKeyValue = $data['del_temp_id'];
            unset($data['del_temp_id']);
            $data['updated_at'] = time();
            $ret =$this->model->where('del_temp_id',$priKeyValue)->update($data);
        }
        return $ret;

    }

    /**
     * 删除(软删除)
     * @param $id
     * @return bool
     */
    public function delete($id)
    {
        $model = $this->model->find($id);
        $model->delete();

        if($model->trashed()){
            return true;
        }else{
            return true;
        }
    }

    /**
     * 获取运送方式
     * @param $id
     * @return $row
     */
    public function getTransportName($id=null)
    {
        if(empty($id)){
            $row = DB::table('saas_delivery')->where('delivery_status','1')->whereNull('deleted_at')->select('delivery_id','delivery_name')->get();
        }else{
            $result = DB::table("saas_delivery")->where('delivery_id',$id)->select('delivery_name')->get();
            $row =  json_decode($result,true);
        }
        return $row;
    }

    /**
     * 获取地区对应的id和名字
     * @param $id
     * @return $row
     */
    public function getArea($id)
    {
        $row = DB::table('saas_areas')->where('area_id',$id)->whereNull('deleted_at')->select('area_id','area_name')->get();
        return $row;
    }

    public function getList($where, $order='created_at', $sort = "desc")
    {
        return parent::getList($where, $order, $sort); // TODO: Change the autogenerated stub
    }


    //获取模板id中优先级最高的模板
    public function getTemplate($temp_ids,$mch_id)
    {
        $temp = $this->model->whereIn('del_temp_id',$temp_ids)->where(['mch_id'=>$mch_id])->orderBy('del_temp_priority','desc')->first();
        if(empty($temp)){
            $temp = $this->model->whereIn('del_temp_id',$temp_ids)->where(['mch_id'=>PUBLIC_CMS_MCH_ID])->orderBy('del_temp_priority','desc')->first();
        }
        return json_decode($temp,true);

    }
    //获取大后台跟商户物流模板列表
    public function getAllTemplateList($mid)
    {
        $inArr = [PUBLIC_CMS_MCH_ID,$mid];
        $list = $this->model->where(['del_temp_status' => PUBLIC_ENABLE])->whereIn('mch_id',$inArr)->orderby('created_at','desc')->get()->toArray();
        return $list;
    }

}
